{
    "id": "rhoas",
    "realm": "rhoas",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "2693752c-65ed-4879-b07e-c1bf8fe60b68",
                "name": "kas_fleetshard_operator",
                "composite": false,
                "clientRole": false,
                "containerId": "rhoas",
                "attributes": {}
            },
            {
                "id": "c0baa2ab-6a88-445e-a007-361c143659e0",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "rhoas",
                "attributes": {}
            },
            {
                "id": "6906d65f-0668-4dfb-afe9-f8438141d12c",
                "name": "connector_fleetshard_operator",
                "composite": false,
                "clientRole": false,
                "containerId": "rhoas",
                "attributes": {}
            },
            {
                "id": "522eae4f-df56-4139-b19b-a571837ee83e",
                "name": "default-roles-rhoas",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": [
                        "offline_access",
                        "uma_authorization"
                    ],
                    "client": {
                        "account": [
                            "manage-account",
                            "view-profile"
                        ]
                    }
                },
                "clientRole": false,
                "containerId": "rhoas",
                "attributes": {}
            },
            {
                "id": "3770beff-c267-456c-b968-ac52764be0cd",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "rhoas",
                "attributes": {}
            }
        ],
        "client": {
            "kas-fleet-manager": [],
            "realm-management": [
                {
                    "id": "7df4a896-1d15-4db8-b124-f9afe6561ebb",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "af664da4-8275-4b8f-a826-742ddd8f71b1",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "50bb49b2-ca82-4b29-90e8-671371ad5542",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "49bb9686-da3f-48ae-840b-8378642eb2a5",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "3af180df-baee-49ed-baf1-05706c844aa7",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "8238989b-6ab5-42b8-807a-d8024ffcbf74",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "1d857a30-b7ee-4309-b112-bdce00520e1f",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "0b1615be-8d9f-40f5-9651-b77abfa9103c",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "e3498d66-048d-43b9-9c79-69f7494023be",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "03af6751-a556-45e9-8c05-e408793ab2e0",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "08118c62-dd33-4741-81ee-fc89b648c07b",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "98ff509b-2ea0-4b21-b6eb-4fbd02c118bc",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "b98451fd-c82a-49e4-925d-f861ec8e4b54",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "a1c36885-b6e1-4a95-998e-1bf763f9d4e5",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "11e96e68-68bd-44bb-b143-0abea0ef8194",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-users",
                                "query-groups"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "16fb18f6-721e-4cfa-ad23-e82a287e11ad",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "e59baa54-a6e0-4db0-bdec-f59a8febc036",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "508aca8c-d025-46a0-a494-d27440806080",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                },
                {
                    "id": "4b15409c-c069-4369-866d-3de3b8d2524d",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "manage-users",
                                "impersonation",
                                "view-events",
                                "query-users",
                                "view-realm",
                                "view-clients",
                                "manage-realm",
                                "query-realms",
                                "view-authorization",
                                "manage-identity-providers",
                                "view-identity-providers",
                                "query-clients",
                                "manage-authorization",
                                "view-users",
                                "query-groups",
                                "manage-events",
                                "manage-clients",
                                "create-client"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
                {
                    "id": "56fc489a-ea74-4b19-9c15-7808f0d2a7f7",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "302f38bb-7c38-46c0-bb23-44be2dd27eb4",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "dad67210-ff6b-42e5-b3be-a7f742a30c2c",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                },
                {
                    "id": "42862585-b8cd-4841-b60b-a49e80930ddf",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "manage-account-links"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                },
                {
                    "id": "fc15dece-8cfe-4764-a834-e3f2c2c3bf01",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                },
                {
                    "id": "4e8dd311-ca1a-4f4a-bd6b-f6192aeb2d0f",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "view-consent"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                },
                {
                    "id": "41f3f0c5-bbe9-40bf-97a3-b5112c5391b8",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                },
                {
                    "id": "bbe3bc14-771a-444a-90e2-3813e6e56eac",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                },
                {
                    "id": "bd3d237f-bb03-41bc-b8d0-641026a09c39",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "522eae4f-df56-4139-b19b-a571837ee83e",
        "name": "default-roles-rhoas",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "rhoas"
    },
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
        {
            "id": "fa107fe1-cbf2-4a90-bdda-f3008a713e60",
            "createdTimestamp": 1650621433901,
            "username": "service-account-kas-fleet-manager",
            "enabled": true,
            "totp": false,
            "emailVerified": false,
            "serviceAccountClientId": "kas-fleet-manager",
            "credentials": [],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "default-roles-rhoas"
            ],
            "clientRoles": {
                "realm-management": [
                    "manage-realm",
                    "manage-users",
                    "manage-clients"
                ]
            },
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account"
                ]
            }
        ]
    },
    "clients": [
        {
            "id": "958915e8-5453-4737-a3df-aaf1d8b4b3ac",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/rhoas/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/rhoas/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "f2482405-39b3-4407-9bab-4b27948519fe",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/rhoas/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/rhoas/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "b8c7a4e7-fbae-4c85-a5e5-f732ed4e67e4",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "11af11e5-0375-493e-98f0-025180b3e51b",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "302f38bb-7c38-46c0-bb23-44be2dd27eb4",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "d14ac6b0-7c87-4184-bd8b-fa541c8e5c7b",
            "clientId": "kas-fleet-manager",
            "name": "kas-fleet-manager",
            "description": "kas-fleet-manager",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "kas-fleet-manager",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "backchannel.logout.session.required": "true",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "0f9cac72-59a0-4479-8ed9-c83eb964a1b9",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e7e0ef95-d656-429e-8aec-2023bf8c82df",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientId",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientId",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e5516253-653a-40f7-bd5f-4b9e33417961",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "b9186b0a-835d-4ee7-891b-ee3a6f030990",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "a8c649c2-28c6-4c9c-87f4-9cfbe622812b",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/rhoas/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/admin/rhoas/console/*"
            ],
            "webOrigins": [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "27831c81-98fd-4100-8ff1-8df1df322abd",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes": [
        {
            "id": "d2f30050-e0ea-4096-8f5a-5f36288ff0bc",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "bc97c161-d7c2-4122-8521-1fab1c7c98a2",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "83e5f1a7-bbfe-4b37-ac5f-447a19796d1d",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "72616f93-38ae-4fd6-9d8c-7e317aaea7de",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "dc8b70aa-74c8-4400-9e5f-d239e67128b8",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "87f8b13a-26cb-4a0a-8742-0da48a4f2568",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "bb73d90f-a20f-45ce-be04-9c41c384c89b",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false",
                "consent.screen.text": ""
            },
            "protocolMappers": [
                {
                    "id": "92ac76fe-e7fa-4add-bc29-32c1658dce3c",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "74e1e8f9-2ee1-4533-ac98-41c7b90b162d",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "16e72f8a-5c8f-451c-a9d6-0f4b70dccc7a",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "5194cdf9-fb46-4230-8822-26aecf5d5eb4",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "897dfb5b-c554-4e05-929d-60d5a1290b5d",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "16f5bbab-2153-4d46-b7b0-3f54494cda7e",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                },
                {
                    "id": "1451b827-bcbd-40dd-a91f-6eca4a17661b",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "1b2c76a8-5b16-40fc-a4a3-6ec702c0f324",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "3f49b8ca-c031-4464-92fe-75d6331ce812",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "07eac69e-1fd7-41cc-ba00-2be05b563b09",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "59a9c531-3cec-4737-9f29-0de8d41d2acf",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "ef3554ed-ec37-4348-88d2-21427132af4f",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "92257b1c-5347-49c7-954a-6fd693a1b7d0",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "9f079588-506c-48cd-9577-ba1b331b407b",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "cd8a1a06-b062-4c90-996a-9e1f56a688b7",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "8be66d2c-c881-4fba-b6a0-a6df8a3c13c2",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "21e70e29-b7d1-4498-a0bb-58c2d92ce8c8",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "ef293831-9d1f-4c6a-9207-29dc82e43b6d",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a74a8d7b-e858-4099-bd7c-d62ffafae97f",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2e188195-eeca-490c-91ef-d41ebe1d934a",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2ffb5d2a-bd1f-4736-8b87-fc23ca581248",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "417a5053-9d76-43eb-89ac-02a6942fe375",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "29164830-5bc9-4eab-94cd-bb59aa07ed80",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "ca7083da-40ad-4fc2-8dea-402e4544c1b7",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "324991f3-6329-4f17-9204-0813c969a04e",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "168d54f6-8051-49da-a0bf-853ff1d955c7",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "ffeec50b-4c4e-4daf-a427-2793e0b45e4d",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "b3b4a258-6301-4178-bdf9-21db510d815f",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "69da785d-432c-41db-8b18-8c35960b56b0",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "dcd92082-d228-44d7-8c87-2104f31c146f",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": [
                        "200"
                    ]
                }
            },
            {
                "id": "94601ea4-375c-4c49-a910-f65fe42af129",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "de3451d6-052a-4c72-b2c6-7253ec11a234",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "6834fa20-c706-415e-8c03-e7567103c478",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "f4a47841-61ef-4937-bf42-c09b49b318d8",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-address-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-full-name-mapper",
                        "saml-user-property-mapper",
                        "saml-role-list-mapper"
                    ]
                }
            },
            {
                "id": "7d4a3c79-7396-45f3-9871-78586f7ef8af",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-property-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-role-list-mapper",
                        "oidc-full-name-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-address-mapper",
                        "saml-user-property-mapper",
                        "saml-user-attribute-mapper"
                    ]
                }
            },
            {
                "id": "50bb87cd-1cf4-4fc5-96c9-31927e8dd628",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ]
                }
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "a7a3a45e-a776-4a11-86eb-a65a17dc9426",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "496b9adf-0820-4020-8a80-aed691270f6f"
                    ],
                    "secret": [
                        "2peUUdOKtqIDjzR4M4Jnyg"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "98ebdb3a-2239-44d2-8b93-30f4b9852de0",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAnr59D+MlllGaL+UHDCWZM2AgN+qVDE4NZXV+aEOXlR/8qHvycfxMAM+5NGDsc+vvLE64WzU70hw2WOY6q/hdXzoLcfCQa6EOYTJl2KUDoVnTZOS8Wg6f7arCMLoVCdlCmQXV6xqGt6BIgxooFfGgGadZGcC4CysOYKs41ocSwXdjO9o99+IVzFa8OZqgx/tSi7ptlT2JyFNSelgtdX/mGw04dLcfvDwPWB9fXQKlp0ReyXk8Pb0Uyazhwot7To/EjxrTI05BKYPVCdNDs/8ZJIkkpH9Z4mrJrLDrc3EoiZUxLRp4wLn3TWxYCnYirHdihZo/5LZVkQDE9UJcQgmc4QIDAQABAoIBAGCL9F4cRXkGCmPExKODnoiblxzLBHmmYwlpC0d4jJG7EZybPdpLmyIHNFoB9O2P+jgVbJS0bLyeQgORiu+ar5dCI0HaEMwU+TzuPPkla27Pxf0gDNos+OHAsDiYhEEoLRQKc49446R8zH1IBEdMXJYdrNg32PeZ6TWsDXaUUjjtYJnJtVnweL3tDPTg+/1BqsvjegdUifgggcXX+3rW5piX7zg2uXW8sypFN37mC64JMfsQ8DH8cTfXsbW3eybtY7/lnLwAErxlUg9NftXSur5m/pqvaQcuedY9FMjZV86behvOy538ThapaFSpNf1992dXyFJ8cLJEBOVP5/ksSkECgYEA2sDvQTUNHu7HvpfeVwkrGDHshKaBqQUaMvF8fisq64UrWpDwxlVbwzt7YTnmiDXO347V2OxBVsD4/C+c4p9YVOKFjhCCTWgXK2yK91AqZ2bcldrV4r5Rum4RyiwcP2E6t1276RPWkPk4JhZl4sOJTGgsbsnUACFrMz7S0TlmUFkCgYEAucXZT7SONUjX+ndDUYjTrtdQVcCpINzYrnSSEqFmtyNeoLNHHmt3onVB+nMm1kyRcRj6SoBvaNefGMJ/MlL/LrHIeTVe+Xmhv8mqbC+4Z8VBI5o0epYO10yAXy/ZhW8BzoKOIy3ZVcCW0+FqQj5C8WayfwqNiNGiVHbXCseP38kCgYAIu1rRh4SWj4F5oiZF4x/NP3DpepwCWynIjsshXifAbvhkDRUPVajsChvKrbz+AufXFKSEnCmfhORrbJsekK299azPFumcnWMPYK3LYW/P4NM9SBbxjhdFEc+z+j7GaOMnHp65lwkhkFEldA9tFdENM7tSUMwdlTfqO7++ikQDQQKBgQCkWrsYvjf2Qlz6NZt0PiZxkAJ963Z2IYz+Qxmcq/jQ29TzPckUy6VLMIxPxKK+g31FXwDI+voV+nXCFQktf6pOKHGhcqt08bw9jnBdSJbQD/7CPcJiFfJJXmBQVmgOmhgyGOUhkIWwTTPjfpFgy+6z3dTben2fZ0BDk+RKoCXUqQKBgC8GJbuvUZtun8m5ed962RpQWXHOgA7EOY7NcTEGFdz2fSv2ooy2SDlfnDac0MQnKTPrVbpe4yrQrzg91ycvkROp41iCn6O2pJu94887fK2OgMa9lFZl1uSLLjbLxkGAbhvorNEBn48ipb+8/1QVndEBsAmcpZ8AqGfsdwj3MvYm"
                    ],
                    "keyUse": [
                        "SIG"
                    ],
                    "certificate": [
                        "MIICmTCCAYECBgGAULREQzANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVyaG9hczAeFw0yMjA0MjIwOTU1MzJaFw0zMjA0MjIwOTU3MTJaMBAxDjAMBgNVBAMMBXJob2FzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnr59D+MlllGaL+UHDCWZM2AgN+qVDE4NZXV+aEOXlR/8qHvycfxMAM+5NGDsc+vvLE64WzU70hw2WOY6q/hdXzoLcfCQa6EOYTJl2KUDoVnTZOS8Wg6f7arCMLoVCdlCmQXV6xqGt6BIgxooFfGgGadZGcC4CysOYKs41ocSwXdjO9o99+IVzFa8OZqgx/tSi7ptlT2JyFNSelgtdX/mGw04dLcfvDwPWB9fXQKlp0ReyXk8Pb0Uyazhwot7To/EjxrTI05BKYPVCdNDs/8ZJIkkpH9Z4mrJrLDrc3EoiZUxLRp4wLn3TWxYCnYirHdihZo/5LZVkQDE9UJcQgmc4QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBVNAPDakzUyFb/+RbmkDCx/9L49VqCLBWbnzbmyzaSpxOG7zK6xBUigiu6uarfzytqLCy1hJOjNLR/sdGoO84M6E2UqSRcZxBSYHCsp+T2EUyBTUjkhHlZDkZi9fx6M8GykyrsP1NHoAl4B3x6+sKa+3SDzjs/+I8lkLtASXiZ1KShSdZs7uGrFPLLsYDEatjZz+uV8aaJPqASvq/i/y+nmjQn+ygV1fePVeG1hJCfz+CJk808YGnV5OlvVa7/doJZgqegS42AYjJQdL122jdIaxbGc1Y+2DzvpH3z1hrnP/4Suhw/5C2Rxvs2yY+VgpU0L8JRIfJOVRDWNqDFgXs4"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "481e6e29-2538-4494-990d-be9fb729d8bf",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEpAIBAAKCAQEAgAjmvBsi/krUmwiyrG5F1bBAJqaLOY4mD2fG/eHS09yFwiJPCMOnZ2nyz/CrczrG7041a+dlkGUg9wkakeztocD0BZ6N24rn8YT3K/3JQiR/Srqxy3BQ8CiUag5REtXE16BpGvEeBnUkPApOvX13f2qN2uUn3g/drI33/gq6v2vIVRD5ko6/mo9EnTmkC4kNGh61t4ODY04B/QRjMj4bebgw2oTvdz0HwW+scpzgdmL6n8Fy9M0FNnsxcE453MEf0y1Xff7zQTC5poOnidDj0VKDLR0hKq7lOvuonmxEVtl0mzOPARqLQqEZlueIYxbHMRRpQZ+dvb5t7hzOGAKn4QIDAQABAoIBACWk+FpUTDyiOdJ/gzEplwTWNnZmv0aj4dLju2FINVmvW/CRb9Vu2ViRkR/MbkyJ+pW/0/su5PDImyGnHpXLKK9HcTf5v1HOjJW5d4cKrlLxMjABpmbfVhzWgZSRMwsrqR2Q/3Y5cI+Lf6Tbjv0t16Wx6ZVzjP5AgffLIiAifXfsRMDMTehMRR7PBVdFtSdnRIx/3EKyWIx8y8K9GunfXzY7f6Lmgnuxx9I3IDUagnPQVkR5KlThUR6Jxt3GAtUd0zhBgPOp5K5kA3XccGGH+W/b/qBapqLDC7OajjmsOZ86UeO1u79X+VhNSmIObLsUuaDJHGICcKye+PfFD8zlYcECgYEA8rDsBrekouEW8gS3V+YTNxduuGbcuxnOSKEtLzOyxDK1a9t0QGUlsyx/SuWqq1g696c1MYF5th6sJ0XPyn8dpGeIAZ68jN/2ghZxnFfjdtn/9PeEGFhZJ/JDf5k4pZzAjWwCkQAKsRJcBE1uCbcovq6GNrIFROFHfRiO+aPFYykCgYEAhw5ZOzod3gdcjcQO+Q6JfGpjqsBBcy6NGW7aphCORqLD0vsT2qGjbvDBowFwG41R0f1MYZMOW1S5fDBavev4vprJapUFhVFyvGTM9/9smIFT0xBeLe+iRYF/oeBUAaHTRZCUalxCBddhfe7Xxa0lYoa+b2uuWJuiuORakQe/LfkCgYEA37V8bBi+FzI7j24Pf2Pi1IayFiMjVwjLoSGJYBhcsgQ4Par2NyHFparfz69zKizTdlPYccDy65DMigsNJpEURub0dOHY1lbgiTudEEvnrjf3e9zpE/PkgzELTUR09hxPVk149CZAtMbCsWiahTQjx9lieGqS9tJero6DxNRU8DkCgYBgJh3upWxYAkOpBbhnJStKMO+tw1uVJcH8JkhxS34O2ZeyH1++Ga8hrzMb2k02wEBM0BjNqoThDotS15XyeglHoSjdwSQCCr81Ukn+EJD+bawAqjlyWJTdCNmVpAAKfWvMraaLpgy23eQhZKWmrKLd5vGynyWrHXoWSTQU5j/7+QKBgQDgxHUkoU4uOFuQp4WWak2G1x+NkJZmHHcb+cFCC62h8pTEU9S/av6L3+znBK4GoRrQgNwOqc1SyqSq6/4soM3BP7YGMyJ0Q5Mb1IRovio0VPVmkt2o6NCHam1CUcJuC0UHo31/cqsCYl4wAlTGO+Lxk7f9d7+L56Zj7/zhNAF9uw=="
                    ],
                    "keyUse": [
                        "ENC"
                    ],
                    "certificate": [
                        "MIICmTCCAYECBgGAULREmTANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVyaG9hczAeFw0yMjA0MjIwOTU1MzJaFw0zMjA0MjIwOTU3MTJaMBAxDjAMBgNVBAMMBXJob2FzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgAjmvBsi/krUmwiyrG5F1bBAJqaLOY4mD2fG/eHS09yFwiJPCMOnZ2nyz/CrczrG7041a+dlkGUg9wkakeztocD0BZ6N24rn8YT3K/3JQiR/Srqxy3BQ8CiUag5REtXE16BpGvEeBnUkPApOvX13f2qN2uUn3g/drI33/gq6v2vIVRD5ko6/mo9EnTmkC4kNGh61t4ODY04B/QRjMj4bebgw2oTvdz0HwW+scpzgdmL6n8Fy9M0FNnsxcE453MEf0y1Xff7zQTC5poOnidDj0VKDLR0hKq7lOvuonmxEVtl0mzOPARqLQqEZlueIYxbHMRRpQZ+dvb5t7hzOGAKn4QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBeuy4Kcu3mOJaPx12KBdIAl/9/7uBovxPcpCDjbWSwI7zHHzp1ECoovTEtgotVt3VscxcEhqd+n6ruqhmuwyqN9dk48vtiNcJ/iqjRxj3c/F7SWMSC1mCQPgfvD+kn0TpCVmFFALLpDGNOQPKQ3jLgr/ikxc2kQVZOpwPelsUmMna6J9sd3sIp5XaIa/8qsJ+B/iqr/ZTfmPXMqwSaOetNf00WRiIhW0w3SKWxP6JhP7i6BsO5GpBUxfQQrPjodQrDiqCW6oknbhbn9eDKzbBMtLP5BIlFX3313uYR/mxadmz5FZKulFM3viEI7lPyxWlt/BWkGZDkgcnAddwOyk+p"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "RSA-OAEP"
                    ]
                }
            },
            {
                "id": "f75f45df-6ba1-4f7e-94d7-9d146e072c8a",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "61f2aa28-5e91-4eb7-9635-1c447d0f7654"
                    ],
                    "secret": [
                        "82obbDN12UU-czWFumkNwEjc6zyKKqREkx2Th8Jc-1j5mG2EHNDLuhe1jjMUI1dcg2tfBnlG014qmzCGOHNYgQ"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS256"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
        {
            "id": "50bca66b-60fe-4d78-9158-278dcb331f97",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5693a7f0-936e-4b62-9f72-01d570d0a32e",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "basic-auth",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8a897659-e902-4c92-9c4b-e6bda928b320",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ed12e7f3-a582-46b1-8dea-46ea0a578edd",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a14be9ab-f8c9-485e-bec3-40517d49cb2c",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "440d0bc9-2f25-4a46-ab81-421609394b37",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d3e3e842-7a63-437d-a2b4-b2674b3f35df",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "bb059b9f-1429-4f82-b32a-7fe5154e4972",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d7acdbb5-9ec7-4288-9ea7-a2179db5fec1",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d67164db-a564-4454-908f-cfb34cc5d8a5",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ced312a7-dbf3-4b73-9147-ca1c18cf4a2b",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1db05a44-3082-49a5-b408-b4a00881de8b",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "553e9bcf-efd3-4430-9332-eeb2ef105738",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d24698e9-6064-4d04-aeab-e90bfc3e4284",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7dadf064-ce0c-4b27-9dd0-fdf15e5ed684",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "71c72a4a-9be6-4e09-a456-e6ea29257728",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Authentication Options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "4ef51622-25b4-4c97-b6aa-0d4ddd710c91",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d3cc282a-6c72-49c3-95b3-02f39b8f41d8",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "85044966-b356-4f5a-ab51-9ba29b5f2bc5",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1cfbb0dc-cfc1-48e0-af62-01f76ca5f5ea",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "769988ad-e760-4727-bdce-0332f0475cf4",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "00b84518-c175-4868-9054-f5ceedd861b8",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "oauth2DevicePollingInterval": "5",
        "parRequestUriLifespan": "60",
        "cibaInterval": "5"
    },
    "keycloakVersion": "17.0.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}