apiVersion: template.openshift.io/v1
kind: Template
name: cos-fleet-catalog-camel
metadata:
  name: cos-fleet-catalog-camel
  annotations:
    openshift.io/display-name: Cos Fleet Manager Connector Catalog
    description: List of available camel connectors and metadata
objects:
-
  apiVersion: v1
  data:
    aws_cloudwatch_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-cloudwatch:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-cloudwatch-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Amazon CloudWatch metrics.",
          "icon_href" : "TODO",
          "id" : "aws_cloudwatch_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon CloudWatch Metrics sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_cw_namespace", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_cw_namespace" : {
                "title" : "Cloud Watch Namespace",
                "description" : "The CloudWatch metric namespace.",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_ddb_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-ddb:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-ddb-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Amazon DynamoDB NoSQL database service. The sent data inserts, updates, or deletes an item in the specified Amazon DynamoDB table.",
          "icon_href" : "TODO",
          "id" : "aws_ddb_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon DynamoDB sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_table", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_table" : {
                "title" : "Table",
                "description" : "The name of the DynamoDB table.",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_operation" : {
                "title" : "Operation",
                "description" : "The operation to perform. The options are PutItem, UpdateItem, or DeleteItem.",
                "type" : "string",
                "default" : "PutItem",
                "example" : "PutItem"
              },
              "aws_write_capacity" : {
                "title" : "Write Capacity",
                "description" : "The provisioned throughput to reserve for writing resources to your table.",
                "type" : "integer",
                "default" : 1
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_ddb_streams_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-ddb-streams:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-ddb-streams-source",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Amazon DynamoDB Streams.",
          "icon_href" : "TODO",
          "id" : "aws_ddb_streams_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Amazon DynamoDB Stream source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_table", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_table" : {
                "title" : "Table",
                "description" : "The name of the DynamoDB table.",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_stream_iterator_type" : {
                "title" : "Stream Iterator Type",
                "description" : "Defines where in the DynamoDB stream to start getting records. There are two enums and the value can be one of FROM_LATEST and FROM_START. Note that using FROM_START can cause a significant delay before the stream has caught up to real-time.",
                "type" : "string",
                "default" : "FROM_LATEST"
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "aws_delay" : {
                "title" : "Delay",
                "description" : "The number of milliseconds before the next poll from the database.",
                "type" : "integer",
                "default" : 500
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_kinesis_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-kinesis:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-kinesis-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Amazon Kinesis.",
          "icon_href" : "TODO",
          "id" : "aws_kinesis_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon Kinesis sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_stream", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_stream" : {
                "title" : "Stream Name",
                "description" : "The Kinesis stream that you want to access. The Kinesis stream that you specify must already exist.",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  },
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                },
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_kinesis_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-kinesis:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-kinesis-source",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Amazon Kinesis.",
          "icon_href" : "TODO",
          "id" : "aws_kinesis_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Amazon Kinesis source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_stream", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_stream" : {
                "title" : "Stream Name",
                "description" : "The Kinesis stream that you want to access. The Kinesis stream that you specify must already exist.",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "aws_delay" : {
                "title" : "Delay",
                "description" : "The number of milliseconds before the next poll of the selected stream.",
                "type" : "integer",
                "default" : 500
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  },
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                },
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_lambda_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-lambda:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-lambda-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an Amazon Lambda function.",
          "icon_href" : "TODO",
          "id" : "aws_lambda_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon Lambda sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_function", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_function" : {
                "title" : "Function Name",
                "description" : "The Lambda Function name.",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_s3_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-s3:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-s3-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an Amazon S3 bucket.",
          "icon_href" : "TODO",
          "id" : "aws_s3_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon S3 sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_bucket_name_or_arn", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_bucket_name_or_arn" : {
                "title" : "Bucket Name",
                "description" : "The S3 Bucket name or Amazon Resource Name (ARN).",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_auto_create_bucket" : {
                "title" : "Autocreate Bucket",
                "description" : "Specifies to automatically create the S3 bucket.",
                "type" : "boolean",
                "default" : false
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "aws_key_name" : {
                "title" : "Key Name",
                "description" : "The key name for saving an element in the bucket.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_s3_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-s3:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-s3-source",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from an Amazon S3 bucket.",
          "icon_href" : "TODO",
          "id" : "aws_s3_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Amazon S3 source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_bucket_name_or_arn", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_bucket_name_or_arn" : {
                "title" : "Bucket Name",
                "description" : "The S3 Bucket name or Amazon Resource Name (ARN).",
                "type" : "string"
              },
              "aws_delete_after_read" : {
                "title" : "Auto-delete Objects",
                "description" : "Specifies to delete objects after consuming them.",
                "type" : "boolean",
                "default" : true
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_auto_create_bucket" : {
                "title" : "Autocreate Bucket",
                "description" : "Specifies to automatically create the S3 bucket.",
                "type" : "boolean",
                "default" : false
              },
              "aws_include_body" : {
                "title" : "Include Body",
                "description" : "If true, the exchange is consumed and put into the body and closed. If false, the S3Object stream is put raw into the body and the headers are set with the S3 object metadata.",
                "type" : "boolean",
                "default" : true
              },
              "aws_prefix" : {
                "title" : "Prefix",
                "description" : "The AWS S3 bucket prefix to consider while searching.",
                "type" : "string",
                "example" : "folder/"
              },
              "aws_ignore_body" : {
                "title" : "Ignore Body",
                "description" : "If true, the S3 Object body is ignored. Setting this to true overrides any behavior defined by the `includeBody` option. If false, the S3 object is put in the body.",
                "type" : "boolean",
                "default" : false
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "aws_delay" : {
                "title" : "Delay",
                "description" : "The number of milliseconds before the next poll of the selected bucket.",
                "type" : "integer",
                "default" : 500
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_ses_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-ses:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-ses-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send email through the Amazon Simple Email Service (SES).",
          "icon_href" : "TODO",
          "id" : "aws_ses_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon Simple Email Service sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_from", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_from" : {
                "title" : "From",
                "description" : "From address",
                "type" : "string",
                "example" : "user@example.com"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_sns_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-sns:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-sns-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an Amazon Simple Notification Service (SNS) topic.",
          "icon_href" : "TODO",
          "id" : "aws_sns_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon Simple Notification Service sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_topic_name_or_arn", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_topic_name_or_arn" : {
                "title" : "Topic Name",
                "description" : "The SNS topic name name or Amazon Resource Name (ARN).",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_auto_create_topic" : {
                "title" : "Autocreate Topic",
                "description" : "Setting the autocreation of the SNS topic.",
                "type" : "boolean",
                "default" : false
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_sqs_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-sqs:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-sqs-sink",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Amazon Simple Queue Service (SQS).",
          "icon_href" : "TODO",
          "id" : "aws_sqs_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon Simple Queue Service sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_queue_name_or_arn", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_queue_name_or_arn" : {
                "title" : "Queue Name",
                "description" : "The SQS Queue name or or Amazon Resource Name (ARN).",
                "type" : "string"
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_auto_create_queue" : {
                "title" : "Autocreate Queue",
                "description" : "Automatically create the SQS queue.",
                "type" : "boolean",
                "default" : false
              },
              "aws_amazon_a_w_s_host" : {
                "title" : "AWS Host",
                "description" : "The hostname of the Amazon AWS cloud.",
                "type" : "string",
                "default" : "amazonaws.com"
              },
              "aws_protocol" : {
                "title" : "Protocol",
                "description" : "The underlying protocol used to communicate with SQS.",
                "type" : "string",
                "example" : "http or https",
                "default" : "https"
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_sqs_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-sqs:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-sqs-source",
                  "prefix" : "aws"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Amazon Simple Queue Service (SQS).",
          "icon_href" : "TODO",
          "id" : "aws_sqs_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Amazon Simple Queue Service source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "aws_queue_name_or_arn", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
            "properties" : {
              "aws_queue_name_or_arn" : {
                "title" : "Queue Name",
                "description" : "The SQS Queue Name or ARN",
                "type" : "string"
              },
              "aws_delete_after_read" : {
                "title" : "Auto-delete Messages",
                "description" : "Delete messages after consuming them",
                "type" : "boolean",
                "default" : true
              },
              "aws_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from AWS.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "aws_region" : {
                "title" : "AWS Region",
                "description" : "The AWS region to access.",
                "type" : "string",
                "enum" : [ "ap-south-1", "eu-south-1", "us-gov-east-1", "me-central-1", "ca-central-1", "eu-central-1", "us-iso-west-1", "us-west-1", "us-west-2", "af-south-1", "eu-north-1", "eu-west-3", "eu-west-2", "eu-west-1", "ap-northeast-3", "ap-northeast-2", "ap-northeast-1", "me-south-1", "sa-east-1", "ap-east-1", "cn-north-1", "us-gov-west-1", "ap-southeast-1", "ap-southeast-2", "us-iso-east-1", "ap-southeast-3", "us-east-1", "us-east-2", "cn-northwest-1", "us-isob-east-1", "aws-global", "aws-cn-global", "aws-us-gov-global", "aws-iso-global", "aws-iso-b-global" ]
              },
              "aws_auto_create_queue" : {
                "title" : "Autocreate Queue",
                "description" : "Setting the autocreation of the SQS queue.",
                "type" : "boolean",
                "default" : false
              },
              "aws_amazon_a_w_s_host" : {
                "title" : "AWS Host",
                "description" : "The hostname of the Amazon AWS cloud.",
                "type" : "string",
                "default" : "amazonaws.com"
              },
              "aws_protocol" : {
                "title" : "Protocol",
                "description" : "The underlying protocol used to communicate with SQS",
                "type" : "string",
                "example" : "http or https",
                "default" : "https"
              },
              "aws_queue_u_r_l" : {
                "title" : "Queue URL",
                "description" : "The full SQS Queue URL (required if using KEDA)",
                "type" : "string"
              },
              "aws_uri_endpoint_override" : {
                "title" : "Overwrite Endpoint URI",
                "description" : "The overriding endpoint URI. To use this option, you must also select the `overrideEndpoint` option.",
                "type" : "string"
              },
              "aws_override_endpoint" : {
                "title" : "Endpoint Overwrite",
                "description" : "Select this option to override the endpoint URI. To use this option, you must also provide a URI for the `uriEndpointOverride` option.",
                "type" : "boolean",
                "default" : false
              },
              "aws_delay" : {
                "title" : "Delay",
                "description" : "The number of milliseconds before the next poll of the selected stream",
                "type" : "integer",
                "default" : 500
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-aws
-
  apiVersion: v1
  data:
    azure_eventhubs_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-eventhubs:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-azure-eventhubs-sink",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Azure Event Hubs.",
          "icon_href" : "TODO",
          "id" : "azure_eventhubs_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Azure Event Hubs sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_namespace_name", "azure_eventhub_name", "azure_shared_access_name", "azure_shared_access_key", "kafka_topic" ],
            "properties" : {
              "azure_namespace_name" : {
                "title" : "Eventhubs Namespace",
                "description" : "The eventhubs namespace",
                "type" : "string"
              },
              "azure_eventhub_name" : {
                "title" : "Eventhubs Name",
                "description" : "The eventhub name",
                "type" : "string"
              },
              "azure_shared_access_name" : {
                "title" : "Share Access Name",
                "description" : "EventHubs SAS key name",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_shared_access_key" : {
                "title" : "Share Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Share Access Key",
                  "description" : "The key for EventHubs SAS key name",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_shared_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_eventhubs_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-eventhubs:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-azure-eventhubs-source",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Azure Event Hubs.",
          "icon_href" : "TODO",
          "id" : "azure_eventhubs_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Azure Event Hubs source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_namespace_name", "azure_eventhub_name", "azure_shared_access_name", "azure_shared_access_key", "azure_blob_account_name", "azure_blob_access_key", "azure_blob_container_name", "kafka_topic" ],
            "properties" : {
              "azure_namespace_name" : {
                "title" : "Eventhubs Namespace",
                "description" : "The Event Hubs namespace.",
                "type" : "string"
              },
              "azure_eventhub_name" : {
                "title" : "Eventhubs Name",
                "description" : "The Event Hub name.",
                "type" : "string"
              },
              "azure_shared_access_name" : {
                "title" : "Share Access Name",
                "description" : "The Event Hubs SAS key name.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_shared_access_key" : {
                "title" : "Share Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Share Access Key",
                  "description" : "The key for the Event Hubs SAS key name.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_shared_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "azure_blob_account_name" : {
                "title" : "Azure Storage Blob Account Name",
                "description" : "The name of the Storage Blob account.",
                "type" : "string"
              },
              "azure_blob_container_name" : {
                "title" : "Azure Storage Blob Container Name",
                "description" : "The name of the Storage Blob container.",
                "type" : "string"
              },
              "azure_blob_access_key" : {
                "title" : "Azure Storage Blob Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Azure Storage Blob Access Key",
                  "description" : "The key for the Azure Storage Blob service that is associated with the Storage Blob account name.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_blob_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  },
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                },
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_functions_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-functions:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "azure-functions-sink",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Functions.",
          "icon_href" : "TODO",
          "id" : "azure_functions_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Azure Functions sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_url", "kafka_topic" ],
            "properties" : {
              "azure_url" : {
                "title" : "URL",
                "description" : "The Azure Functions URL you want to send the data to.",
                "type" : "string",
                "example" : "https://azure-function-demo-12234.azurewebsites.net/api/httpexample",
                "pattern" : "^(https)://.*"
              },
              "azure_method" : {
                "title" : "Method",
                "description" : "The HTTP method to use.",
                "type" : "string",
                "default" : "POST"
              },
              "azure_key" : {
                "title" : "Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Key",
                  "description" : "A function-specific API key is required, if the authLevel of the function is FUNCTION or master key if the authLevel is ADMIN.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_storage_blob_changefeed_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-storage-blob-changefeed:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "azure-storage-blob-changefeed-source",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Azure Blob storage change feed.",
          "icon_href" : "TODO",
          "id" : "azure_storage_blob_changefeed_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Azure Blob Storage change feed source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_period", "azure_account_name", "azure_access_key", "kafka_topic" ],
            "properties" : {
              "azure_period" : {
                "title" : "Period between Polls",
                "description" : "The interval (in milliseconds) between fetches to the Azure Storage change feed.",
                "type" : "integer",
                "default" : 10000
              },
              "azure_account_name" : {
                "title" : "Account Name",
                "description" : "The Azure Storage Blob account name.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The Azure Storage Blob access Key.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_storage_blob_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-storage-blob:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "azure-storage-blob-sink",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Azure Blob storage.",
          "icon_href" : "TODO",
          "id" : "azure_storage_blob_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Azure Blob Storage sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_account_name", "azure_container_name", "azure_access_key", "kafka_topic" ],
            "properties" : {
              "azure_account_name" : {
                "title" : "Account Name",
                "description" : "The Azure Storage Blob account name.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_container_name" : {
                "title" : "Container Name",
                "description" : "The Azure Storage Blob container name.",
                "type" : "string"
              },
              "azure_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The Azure Storage Blob access key.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "azure_operation" : {
                "title" : "Operation name",
                "description" : "The operation to perform.",
                "type" : "string",
                "default" : "uploadBlockBlob"
              },
              "azure_credential_type" : {
                "title" : "Credential Type",
                "description" : "Determines the credential strategy to adopt. Possible values are SHARED_ACCOUNT_KEY, SHARED_KEY_CREDENTIAL and AZURE_IDENTITY",
                "type" : "string",
                "default" : "SHARED_ACCOUNT_KEY"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_storage_blob_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-storage-blob:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-azure-storage-blob-source",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Azure Blob storage.",
          "icon_href" : "TODO",
          "id" : "azure_storage_blob_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Azure Blob Storage source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_account_name", "azure_container_name", "azure_access_key", "kafka_topic" ],
            "properties" : {
              "azure_account_name" : {
                "title" : "Account Name",
                "description" : "The Azure Storage Blob account name.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_container_name" : {
                "title" : "Container Name",
                "description" : "The Azure Storage Blob container name.",
                "type" : "string"
              },
              "azure_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The Azure Storage Blob access key.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "azure_credential_type" : {
                "title" : "Credential Type",
                "description" : "Determines the credential strategy to adopt. Possible values are SHARED_ACCOUNT_KEY, SHARED_KEY_CREDENTIAL and AZURE_IDENTITY",
                "type" : "string",
                "default" : "SHARED_ACCOUNT_KEY"
              },
              "azure_delay" : {
                "title" : "Delay",
                "description" : "The number of milliseconds before the next poll of the selected blob.",
                "type" : "integer",
                "default" : 500
              },
              "azure_delete_after_read" : {
                "title" : "Auto-delete Blob",
                "description" : "Specifies to delete blob after consuming them.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_storage_queue_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-storage-queue:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "azure-storage-queue-sink",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Azure Queue Storage.",
          "icon_href" : "TODO",
          "id" : "azure_storage_queue_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Azure Queue Storage sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_account_name", "azure_queue_name", "azure_access_key", "kafka_topic" ],
            "properties" : {
              "azure_account_name" : {
                "title" : "Account Name",
                "description" : "The Azure Storage Queue account name.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_queue_name" : {
                "title" : "Queue Name",
                "description" : "The Azure Storage Queue container name.",
                "type" : "string"
              },
              "azure_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The Azure Storage Queue access key.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    azure_storage_queue_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-azure-storage-queue:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "azure-storage-queue-source",
                  "prefix" : "azure"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Azure Queue Storage.",
          "icon_href" : "TODO",
          "id" : "azure_storage_queue_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Azure Queue Storage source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "azure_account_name", "azure_queue_name", "azure_access_key", "kafka_topic" ],
            "properties" : {
              "azure_account_name" : {
                "title" : "Account Name",
                "description" : "The Azure Storage Queue account name.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "azure_queue_name" : {
                "title" : "Queue Name",
                "description" : "The Azure Storage Queue container name.",
                "type" : "string"
              },
              "azure_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The Azure Storage Queue access key.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the azure_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "azure_max_messages" : {
                "title" : "Maximum Messages",
                "description" : "The maximum number of messages to get. You can specify a value between 1 and 32. The default is 1 (one message). If there are fewer than the maximum number of messages in the queue, then all the messages are returned.",
                "type" : "integer",
                "default" : 1
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-azure
-
  apiVersion: v1
  data:
    google_bigquery_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-google-bigquery:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "google-bigquery-sink",
                  "prefix" : "gcp"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to a Google Big Query table.",
          "icon_href" : "TODO",
          "id" : "google_bigquery_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Google BigQuery sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "gcp_project_id", "gcp_dataset", "gcp_table", "gcp_service_account_key", "kafka_topic" ],
            "properties" : {
              "gcp_project_id" : {
                "title" : "Google Cloud Project Id",
                "description" : "The Google Cloud Project ID.",
                "type" : "string"
              },
              "gcp_dataset" : {
                "title" : "Big Query Dataset Id",
                "description" : "The Big Query Dataset ID.",
                "type" : "string"
              },
              "gcp_table" : {
                "title" : "Big Query Table Id",
                "description" : "The Big Query Table ID.",
                "type" : "string"
              },
              "gcp_service_account_key" : {
                "title" : "Service Account Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Service Account Key",
                  "description" : "The service account key to use as credentials for the BigQuery Service. You must encode this value in base64.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "additionalProperties" : false
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    google_functions_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-google-functions:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-google-functions-sink",
                  "prefix" : "gcp"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Google Functions.",
          "icon_href" : "TODO",
          "id" : "google_functions_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Google Cloud Functions sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "gcp_project_id", "gcp_function_name", "gcp_region", "gcp_service_account_key", "kafka_topic" ],
            "properties" : {
              "gcp_project_id" : {
                "title" : "Project Id",
                "description" : "The Google Cloud Functions Project ID.",
                "type" : "string"
              },
              "gcp_region" : {
                "title" : "Region",
                "description" : "The region where Google Cloud Functions has been deployed.",
                "type" : "string"
              },
              "gcp_function_name" : {
                "title" : "Function Name",
                "description" : "The Function name.",
                "type" : "string"
              },
              "gcp_service_account_key" : {
                "title" : "Service Account Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Service Account Key",
                  "description" : "The path to the service account key file that provides credentials for the Google Cloud Functions platform.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "additionalProperties" : false
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    google_pubsub_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-google-pubsub:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "google-pubsub-sink",
                  "prefix" : "gcp"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Google Cloud Pub/Sub.",
          "icon_href" : "TODO",
          "id" : "google_pubsub_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Google Cloud Pub/Sub sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "gcp_project_id", "gcp_destination_name", "gcp_service_account_key", "kafka_topic" ],
            "properties" : {
              "gcp_project_id" : {
                "title" : "Project Id",
                "description" : "The Google Cloud Pub/Sub Project ID.",
                "type" : "string"
              },
              "gcp_destination_name" : {
                "title" : "Destination Name",
                "description" : "The destination name.",
                "type" : "string"
              },
              "gcp_service_account_key" : {
                "title" : "Service Account Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Service Account Key",
                  "description" : "The service account key to use as credentials for the Pub/Sub publisher/subscriber. You must encode this value in base64.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "additionalProperties" : false
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    google_pubsub_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-google-pubsub:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "google-pubsub-source",
                  "prefix" : "gcp"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from Google Cloud Pub/Sub.",
          "icon_href" : "TODO",
          "id" : "google_pubsub_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Google Cloud Pub/Sub source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "gcp_project_id", "gcp_subscription_name", "gcp_service_account_key", "kafka_topic" ],
            "properties" : {
              "gcp_project_id" : {
                "title" : "Project Id",
                "description" : "The Google Cloud Pub/Sub Project ID.",
                "type" : "string"
              },
              "gcp_subscription_name" : {
                "title" : "Subscription Name",
                "description" : "The subscription name.",
                "type" : "string"
              },
              "gcp_service_account_key" : {
                "title" : "Service Account Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Service Account Key",
                  "description" : "The service account key to use as credentials for the Pub/Sub publisher/subscriber. You must encode this value in base64.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "additionalProperties" : false
                } ]
              },
              "gcp_synchronous_pull" : {
                "title" : "Synchronous Pull",
                "description" : "Specifies to synchronously pull batches of messages.",
                "type" : "boolean",
                "default" : false
              },
              "gcp_max_messages_per_poll" : {
                "title" : "Max Messages Per Poll",
                "description" : "The maximum number of messages to receive from the server in a single API call.",
                "type" : "integer",
                "default" : 1
              },
              "gcp_concurrent_consumers" : {
                "title" : "Concurrent Consumers",
                "description" : "The number of parallel streams to consume from the subscription.",
                "type" : "integer",
                "default" : 1
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    google_storage_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-google-storage:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "google-storage-sink",
                  "prefix" : "gcp"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Upload data to Google Cloud Storage.",
          "icon_href" : "TODO",
          "id" : "google_storage_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Google Cloud Storage sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "gcp_bucket_name_or_arn", "gcp_service_account_key", "kafka_topic" ],
            "properties" : {
              "gcp_bucket_name_or_arn" : {
                "title" : "Bucket Name Or ARN",
                "description" : "The Google Cloud Storage bucket name or Bucket Amazon Resource Name (ARN).",
                "type" : "string"
              },
              "gcp_service_account_key" : {
                "title" : "Service Account Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Service Account Key",
                  "description" : "The service account key to use as credentials for Google Cloud Storage access. You must encode this value in base64.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "additionalProperties" : false
                } ]
              },
              "gcp_auto_create_bucket" : {
                "title" : "Autocreate Bucket",
                "description" : "Specifies to automatically create the Google Cloud Storage bucket.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    google_storage_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-google-storage:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "google-storage-source",
                  "prefix" : "gcp"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send messages to Google Pubsub.",
          "icon_href" : "TODO",
          "id" : "google_storage_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Google Cloud Storage source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "gcp_bucket_name_or_arn", "gcp_service_account_key", "kafka_topic" ],
            "properties" : {
              "gcp_bucket_name_or_arn" : {
                "title" : "Bucket Name Or ARN",
                "description" : "The Google Cloud Storage bucket name or Bucket Amazon Resource Name (ARN).",
                "type" : "string"
              },
              "gcp_service_account_key" : {
                "title" : "Service Account Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Service Account Key",
                  "description" : "The service account key to use as credentials for Google Cloud Storage access. You must encode this value in base64.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the aws_access_key",
                  "type" : "object",
                  "additionalProperties" : false
                } ]
              },
              "gcp_delete_after_read" : {
                "title" : "Auto-delete Objects",
                "description" : "Specifies to delete objects after consuming them.",
                "type" : "boolean",
                "default" : true
              },
              "gcp_auto_create_bucket" : {
                "title" : "Autocreate Bucket",
                "description" : "Specifies to automatically create the Google Cloud Storage bucket.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-gcp
-
  apiVersion: v1
  data:
    ansible_tower_job_template_launch_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-ansible-tower:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "ansible-job-template-launch-sink",
                  "prefix" : "ansible"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Ansible Tower sink",
          "icon_href" : "TODO",
          "id" : "ansible_tower_job_template_launch_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Ansible Tower sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "ansible_tower_host", "ansible_tower_basic_auth_username", "ansible_tower_basic_auth_password", "ansible_tower_job_template_id", "kafka_topic" ],
            "properties" : {
              "ansible_tower_host" : {
                "title" : "Ansible Tower Host",
                "description" : "The Ansible Tower Host",
                "type" : "string"
              },
              "ansible_tower_host_insecure" : {
                "title" : "Set whether all server certificates should be trusted",
                "description" : "Set whether all server certificates should be trusted",
                "type" : "boolean",
                "default" : false
              },
              "ansible_tower_host_verify" : {
                "title" : "Set whether hostname verification is enabled",
                "description" : "Set whether hostname verification is enabled",
                "type" : "boolean",
                "default" : true
              },
              "ansible_tower_job_template_id" : {
                "title" : "The Job Template ID",
                "description" : "The Job Template ID",
                "type" : "string"
              },
              "ansible_tower_basic_auth_username" : {
                "title" : "Basic Authentication Username",
                "description" : "Authentication Username",
                "type" : "string",
                "x-group" : "credentials"
              },
              "ansible_tower_basic_auth_password" : {
                "title" : "Basic Authentication Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Basic Authentication Password",
                  "description" : "Basic Authentication Password",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the ansible_tower_basic_auth_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    splunk_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-splunk:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "splunk-sink",
                  "prefix" : "splunk"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to Splunk.",
          "icon_href" : "TODO",
          "id" : "splunk_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Splunk sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "splunk_server_hostname", "splunk_username", "splunk_password", "kafka_topic" ],
            "properties" : {
              "splunk_server_hostname" : {
                "title" : "Splunk Server Address",
                "description" : "The address of your Splunk server.",
                "type" : "string",
                "example" : "my_server_splunk.com"
              },
              "splunk_server_port" : {
                "title" : "Splunk Server Port",
                "description" : "The address of your Splunk server.",
                "type" : "integer",
                "default" : 8089
              },
              "splunk_username" : {
                "title" : "Username",
                "description" : "The username to authenticate to Splunk Server.",
                "type" : "string"
              },
              "splunk_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to authenticate to Splunk Server.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the splunk_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "splunk_index" : {
                "title" : "Index",
                "description" : "Splunk index to write to.",
                "type" : "string"
              },
              "splunk_protocol" : {
                "title" : "Protocol",
                "description" : "Connection Protocol to Splunk server.",
                "type" : "string",
                "default" : "https",
                "enum" : [ "http", "https" ]
              },
              "splunk_source" : {
                "title" : "Source",
                "description" : "The source named field of the data.",
                "type" : "string"
              },
              "splunk_source_type" : {
                "title" : "Source Type",
                "description" : "The source named field of the data.",
                "type" : "string"
              },
              "splunk_app" : {
                "title" : "Splunk App",
                "description" : "The app name in Splunk.",
                "type" : "string"
              },
              "splunk_connection_timeout" : {
                "title" : "Connection Timeout",
                "description" : "Timeout in milliseconds when connecting to Splunk server",
                "type" : "integer",
                "default" : 5000
              },
              "splunk_mode" : {
                "title" : "Mode",
                "description" : "The mode to publish events to Splunk.",
                "type" : "string",
                "default" : "stream",
                "enum" : [ "submit", "stream" ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-itops
-
  apiVersion: v1
  data:
    http_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-http:main-b2d31c551e10a71dc9de2c3318e93caf0fadf4f1",
              "connector_revision" : 72,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-http-sink",
                  "prefix" : "http"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to a HTTP endpoint.",
          "icon_href" : "TODO",
          "id" : "http_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "HTTP sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "http_url", "kafka_topic" ],
            "properties" : {
              "http_url" : {
                "title" : "URL",
                "description" : "The URL to which you want to send data.",
                "type" : "string",
                "example" : "https://my-service/path",
                "pattern" : "^(http|https)://.*"
              },
              "http_method" : {
                "title" : "Method",
                "description" : "The HTTP method to use.",
                "type" : "string",
                "default" : "POST"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    jms_amqp_10_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jms-amqp-10:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jms-amqp-10-sink",
                  "prefix" : "jms_amqp"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to any AMQP 1.0 compliant message broker by using the Apache Qpid JMS client.",
          "icon_href" : "TODO",
          "id" : "jms_amqp_10_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "JMS AMQP 1.0 sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jms_amqp_destination_name", "jms_amqp_remote_u_r_i", "kafka_topic" ],
            "properties" : {
              "jms_amqp_destination_type" : {
                "title" : "Destination Type",
                "description" : "The JMS destination type (queue or topic).",
                "type" : "string",
                "default" : "queue"
              },
              "jms_amqp_destination_name" : {
                "title" : "Destination Name",
                "description" : "The JMS destination name.",
                "type" : "string"
              },
              "jms_amqp_remote_u_r_i" : {
                "title" : "Broker URL",
                "description" : "The JMS URL.",
                "type" : "string",
                "example" : "amqp://my-host:31616"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    jms_amqp_10_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jms-amqp-10:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jms-amqp-10-source",
                  "prefix" : "jms_amqp"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from any AMQP 1.0 compliant message broker by using the Apache Qpid JMS client.",
          "icon_href" : "TODO",
          "id" : "jms_amqp_10_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "JMS AMQP 1.0 source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jms_amqp_destination_name", "jms_amqp_remote_u_r_i", "kafka_topic" ],
            "properties" : {
              "jms_amqp_destination_type" : {
                "title" : "Destination Type",
                "description" : "The JMS destination type (queue or topic).",
                "type" : "string",
                "default" : "queue"
              },
              "jms_amqp_destination_name" : {
                "title" : "Destination Name",
                "description" : "The JMS destination name.",
                "type" : "string"
              },
              "jms_amqp_remote_u_r_i" : {
                "title" : "Broker URL",
                "description" : "The JMS URL.",
                "type" : "string",
                "example" : "amqp://my-host:31616"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    jms_apache_artemis_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jms-apache-artemis:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jms-apache-artemis-sink",
                  "prefix" : "jms_artemis"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an Apache Artemis message broker by using JMS.",
          "icon_href" : "TODO",
          "id" : "jms_apache_artemis_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "JMS Apache Artemis sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jms_artemis_destination_name", "jms_artemis_broker_u_r_l", "kafka_topic" ],
            "properties" : {
              "jms_artemis_destination_type" : {
                "title" : "Destination Type",
                "description" : "The JMS destination type (queue or topic).",
                "type" : "string",
                "default" : "queue"
              },
              "jms_artemis_destination_name" : {
                "title" : "Destination Name",
                "description" : "The JMS destination name.",
                "type" : "string",
                "example" : "person"
              },
              "jms_artemis_broker_u_r_l" : {
                "title" : "Broker URL",
                "description" : "The JMS URL.",
                "type" : "string",
                "example" : "tcp://my-host:61616"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    jms_apache_artemis_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jms-apache-artemis:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jms-apache-artemis-source",
                  "prefix" : "jms_artemis"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive data from an Apache Artemis message broker by using JMS.",
          "icon_href" : "TODO",
          "id" : "jms_apache_artemis_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "JMS Apache Artemis source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jms_artemis_destination_name", "jms_artemis_broker_u_r_l", "kafka_topic" ],
            "properties" : {
              "jms_artemis_destination_type" : {
                "title" : "Destination Type",
                "description" : "The JMS destination type (queue or topic).",
                "type" : "string",
                "default" : "queue"
              },
              "jms_artemis_destination_name" : {
                "title" : "Destination Name",
                "description" : "The JMS destination name.",
                "type" : "string"
              },
              "jms_artemis_broker_u_r_l" : {
                "title" : "Broker URL",
                "description" : "The JMS URL.",
                "type" : "string",
                "example" : "tcp://k3s-node-master.usersys.redhat.com:31616"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    rest_openapi_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-rest-openapi:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "rest-openapi-sink",
                  "prefix" : "rest_openapi"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Load an OpenAPI specification from a specified URI and call an operation on the HTTP service.",
          "icon_href" : "TODO",
          "id" : "rest_openapi_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "OpenAPI sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "rest_openapi_specification", "rest_openapi_operation", "kafka_topic" ],
            "properties" : {
              "rest_openapi_specification" : {
                "title" : "Specification URI",
                "description" : "The URI to the OpenApi specification file.",
                "type" : "string",
                "example" : "https://api.example.com/openapi.json",
                "pattern" : "^(http|https|file|classpath)://.*"
              },
              "rest_openapi_operation" : {
                "title" : "Operation ID",
                "description" : "The operation to call.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-messaging
-
  apiVersion: v1
  data:
    data_generator_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-data-generator:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "timer-source",
                  "prefix" : "timer"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "A data generator (for development and testing purposes).",
          "icon_href" : "TODO",
          "id" : "data_generator_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Data Generator source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "timer_message", "kafka_topic" ],
            "properties" : {
              "timer_period" : {
                "title" : "Period",
                "description" : "The interval (in milliseconds) to wait between producing the next message.",
                "type" : "integer",
                "default" : 1000
              },
              "timer_message" : {
                "title" : "Message",
                "description" : "The message to generate.",
                "type" : "string",
                "example" : "hello world"
              },
              "timer_content_type" : {
                "title" : "Content Type",
                "description" : "The content type of the generated message.",
                "type" : "string",
                "default" : "text/plain"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-misc
-
  apiVersion: v1
  data:
    cassandra_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-cassandra:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cassandra-sink",
                  "prefix" : "cassandra"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an Apache Cassandra cluster.",
          "icon_href" : "TODO",
          "id" : "cassandra_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Apache Cassandra sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "cassandra_connection_host", "cassandra_connection_port", "cassandra_keyspace", "cassandra_query", "kafka_topic" ],
            "properties" : {
              "cassandra_connection_host" : {
                "title" : "Connection Host",
                "description" : "The hostname(s) for the Cassandra server(s). Use a comma to separate multiple hostnames.",
                "type" : "string",
                "example" : "localhost"
              },
              "cassandra_connection_port" : {
                "title" : "Connection Port",
                "description" : "The port number(s) of the cassandra server(s). Use a comma to separate multiple port numbers.",
                "type" : "string",
                "example" : 9042
              },
              "cassandra_keyspace" : {
                "title" : "Keyspace",
                "description" : "The keyspace to use.",
                "type" : "string",
                "example" : "customers"
              },
              "cassandra_username" : {
                "title" : "Username",
                "description" : "The username for accessing a secured Cassandra cluster.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "cassandra_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password for accessing a secured Cassandra cluster.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the cassandra_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "cassandra_consistency_level" : {
                "title" : "Consistency Level",
                "description" : "The consistency level to use. Set the value to one of these options - ANY, ONE, TWO, THREE, QUORUM, ALL, LOCAL_QUORUM, EACH_QUORUM, SERIAL, LOCAL_SERIAL, or LOCAL_ONE.",
                "type" : "string",
                "default" : "ANY"
              },
              "cassandra_prepare_statements" : {
                "title" : "Prepare Statements",
                "description" : "If true, specifies to use PreparedStatements as the query. If false, specifies to use regular Statements as the query.",
                "type" : "boolean",
                "default" : true
              },
              "cassandra_query" : {
                "title" : "Query",
                "description" : "The query to execute against the Cassandra cluster table.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    cassandra_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-cassandra:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cassandra-source",
                  "prefix" : "cassandra"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Retrieve data by sending a query to an Apache Cassandra cluster table.",
          "icon_href" : "TODO",
          "id" : "cassandra_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Apache Cassandra source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "cassandra_connection_host", "cassandra_connection_port", "cassandra_keyspace", "cassandra_query", "kafka_topic" ],
            "properties" : {
              "cassandra_connection_host" : {
                "title" : "Connection Host",
                "description" : "The hostname(s) for the Cassandra server(s). Use a comma to separate multiple hostnames.",
                "type" : "string",
                "example" : "localhost"
              },
              "cassandra_connection_port" : {
                "title" : "Connection Port",
                "description" : "The port number(s) of the cassandra server(s). Use a comma to separate multiple port numbers.",
                "type" : "string",
                "example" : 9042
              },
              "cassandra_keyspace" : {
                "title" : "Keyspace",
                "description" : "The keyspace to use.",
                "type" : "string",
                "example" : "customers"
              },
              "cassandra_username" : {
                "title" : "Username",
                "description" : "The username for accessing a secured Cassandra cluster.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "cassandra_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password for accessing a secured Cassandra cluster.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the cassandra_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "cassandra_result_strategy" : {
                "title" : "Result Strategy",
                "description" : "The strategy to convert the result set of the query. Possible values are ALL, ONE, LIMIT_10, or LIMIT_100.",
                "type" : "string",
                "default" : "ALL"
              },
              "cassandra_consistency_level" : {
                "title" : "Consistency Level",
                "description" : "The consistency level to use. Possible values are ANY, ONE, TWO, THREE, QUORUM, ALL, LOCAL_QUORUM, EACH_QUORUM, SERIAL, LOCAL_SERIAL, or LOCAL_ONE.",
                "type" : "string",
                "default" : "QUORUM"
              },
              "cassandra_query" : {
                "title" : "Query",
                "description" : "The query to execute against the Cassandra cluster table.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    elasticsearch_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-elasticsearch:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "elasticsearch-index-sink",
                  "prefix" : "elasticsearch"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Store JSON-formatted data into ElasticSearch.",
          "icon_href" : "TODO",
          "id" : "elasticsearch_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Elasticsearch sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "elasticsearch_cluster_name", "elasticsearch_host_addresses", "kafka_topic" ],
            "properties" : {
              "elasticsearch_user" : {
                "title" : "Username",
                "description" : "The username to connect to ElasticSearch.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "elasticsearch_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to connect to ElasticSearch.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the elasticsearch_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "elasticsearch_enable_s_s_l" : {
                "title" : "Enable SSL",
                "description" : "Specifies to connect by using SSL.",
                "type" : "boolean",
                "default" : true
              },
              "elasticsearch_host_addresses" : {
                "title" : "Host Addresses",
                "description" : "A comma-separated list of remote transport addresses in `ip:port format`.",
                "type" : "string",
                "example" : "quickstart-es-http:9200"
              },
              "elasticsearch_cluster_name" : {
                "title" : "ElasticSearch Cluster Name",
                "description" : "The name of the ElasticSearch cluster.",
                "type" : "string",
                "example" : "quickstart"
              },
              "elasticsearch_index_name" : {
                "title" : "Index in ElasticSearch",
                "description" : "The name of the ElasticSearch index.",
                "type" : "string",
                "example" : "data"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    mongodb_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-mongodb:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-mongodb-sink",
                  "prefix" : "mongodb"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to MongoDB.",
          "icon_href" : "TODO",
          "id" : "mongodb_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "MongoDB sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "mongodb_hosts", "mongodb_collection", "mongodb_database", "kafka_topic" ],
            "properties" : {
              "mongodb_hosts" : {
                "title" : "MongoDB Hosts",
                "description" : "Comma separated list of MongoDB Host Addresses in host:port format.",
                "type" : "string"
              },
              "mongodb_collection" : {
                "title" : "MongoDB Collection",
                "description" : "Sets the name of the MongoDB collection to bind to this endpoint.",
                "type" : "string"
              },
              "mongodb_password" : {
                "title" : "MongoDB Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "MongoDB Password",
                  "description" : "User password for accessing MongoDB.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the mongodb_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "mongodb_username" : {
                "title" : "MongoDB Username",
                "description" : "Username for accessing MongoDB.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "mongodb_database" : {
                "title" : "MongoDB Database",
                "description" : "Sets the name of the MongoDB database to target.",
                "type" : "string"
              },
              "mongodb_write_concern" : {
                "title" : "Write Concern",
                "description" : "Configure the level of acknowledgment requested from MongoDB for write operations, possible values are ACKNOWLEDGED, W1, W2, W3, UNACKNOWLEDGED, JOURNALED, MAJORITY.",
                "type" : "string"
              },
              "mongodb_create_collection" : {
                "title" : "Collection",
                "description" : "Create collection during initialisation if it doesn't exist.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    mongodb_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-mongodb:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "mongodb-source",
                  "prefix" : "mongodb"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Retrieve data from MongoDB.",
          "icon_href" : "TODO",
          "id" : "mongodb_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "MongoDB source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "mongodb_hosts", "mongodb_collection", "mongodb_database", "kafka_topic" ],
            "properties" : {
              "mongodb_hosts" : {
                "title" : "MongoDB Hosts",
                "description" : "A comma-separated list of MongoDB host addresses in `host:port` format.",
                "type" : "string"
              },
              "mongodb_collection" : {
                "title" : "MongoDB Collection",
                "description" : "The name of the MongoDB collection to bind to this endpoint.",
                "type" : "string"
              },
              "mongodb_password" : {
                "title" : "MongoDB Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "MongoDB Password",
                  "description" : "The user password for accessing MongoDB.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the mongodb_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "mongodb_username" : {
                "title" : "MongoDB Username",
                "description" : "The username for accessing MongoDB. The username must be present in the MongoDB's authentication database (`authenticationDatabase`). By default, the MongoDB `authenticationDatabase` is 'admin'.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "mongodb_database" : {
                "title" : "MongoDB Database",
                "description" : "The name of the MongoDB database.",
                "type" : "string"
              },
              "mongodb_persistent_tail_tracking" : {
                "title" : "MongoDB Persistent Tail Tracking",
                "description" : "Specifies to enable persistent tail tracking, which is a mechanism to keep track of the last consumed data across system restarts. The next time the system is up, the endpoint recovers the cursor from the point where it last stopped consuimg data. This option will only work on capped collections.",
                "type" : "boolean",
                "default" : false
              },
              "mongodb_tail_track_increasing_field" : {
                "title" : "MongoDB Tail Track Increasing Field",
                "description" : "The correlation field in the incoming data which is of increasing nature and is used to position the tailing cursor every time it is generated.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-nosql
-
  apiVersion: v1
  data:
    jira_add_comment_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jira:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jira-add-comment-sink",
                  "prefix" : "jira"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Add a new comment to an existing issue in Jira.",
          "icon_href" : "TODO",
          "id" : "jira_add_comment_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Jira Add Comment sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jira_jira_url", "jira_username", "jira_password", "kafka_topic" ],
            "properties" : {
              "jira_jira_url" : {
                "title" : "Jira URL",
                "description" : "The URL of your instance of Jira",
                "type" : "string",
                "example" : "http://my_jira.com:8081"
              },
              "jira_username" : {
                "title" : "Username",
                "description" : "The username to access Jira",
                "type" : "string",
                "x-group" : "credentials"
              },
              "jira_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password or the API Token to access Jira",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the jira_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    jira_add_issue_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jira:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jira-add-issue-sink",
                  "prefix" : "jira"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Add a new issue to Jira.",
          "icon_href" : "TODO",
          "id" : "jira_add_issue_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Jira Add Issue sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jira_jira_url", "jira_username", "jira_password", "kafka_topic" ],
            "properties" : {
              "jira_jira_url" : {
                "title" : "Jira URL",
                "description" : "The URL of your instance of Jira",
                "type" : "string",
                "example" : "http://my_jira.com:8081"
              },
              "jira_username" : {
                "title" : "Username",
                "description" : "The username to access Jira",
                "type" : "string",
                "x-group" : "credentials"
              },
              "jira_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password or the API Token to access Jira",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the jira_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    jira_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-jira:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "jira-source",
                  "prefix" : "jira"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive notifications about new issues from Jira.",
          "icon_href" : "TODO",
          "id" : "jira_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Jira source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "jira_jira_url", "jira_username", "jira_password", "kafka_topic" ],
            "properties" : {
              "jira_jira_url" : {
                "title" : "Jira URL",
                "description" : "The URL of your instance of Jira.",
                "type" : "string",
                "example" : "http://my_jira.com:8081"
              },
              "jira_username" : {
                "title" : "Username",
                "description" : "The username to access Jira.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "jira_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password or the API Token to access Jira.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the jira_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "jira_jql" : {
                "title" : "JQL",
                "description" : "A query to filter issues.",
                "type" : "string",
                "example" : "project=MyProject"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    salesforce_create_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-salesforce:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "salesforce-create-sink",
                  "prefix" : "salesforce"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Create an object in Salesforce.",
          "icon_href" : "TODO",
          "id" : "salesforce_create_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Salesforce Create sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "salesforce_client_id", "salesforce_client_secret", "salesforce_user_name", "salesforce_password", "kafka_topic" ],
            "properties" : {
              "salesforce_s_object_name" : {
                "title" : "Object Name",
                "description" : "The type of the object.",
                "type" : "string",
                "example" : "Contact"
              },
              "salesforce_login_url" : {
                "title" : "Login URL",
                "description" : "The Salesforce instance login URL.",
                "type" : "string",
                "default" : "https://login.salesforce.com"
              },
              "salesforce_client_id" : {
                "title" : "Consumer Key",
                "description" : "The Salesforce application consumer key.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_client_secret" : {
                "title" : "Consumer Secret",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Consumer Secret",
                  "description" : "The Salesforce application consumer secret.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_client_secret",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "salesforce_user_name" : {
                "title" : "Username",
                "description" : "The Salesforce username.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The Salesforce user password.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    salesforce_delete_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-salesforce:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "salesforce-delete-sink",
                  "prefix" : "salesforce"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Delete an object in Salesforce.",
          "icon_href" : "TODO",
          "id" : "salesforce_delete_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Salesforce Delete sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "salesforce_client_id", "salesforce_client_secret", "salesforce_user_name", "salesforce_password", "kafka_topic" ],
            "properties" : {
              "salesforce_login_url" : {
                "title" : "Login URL",
                "description" : "The Salesforce instance login URL.",
                "type" : "string",
                "default" : "https://login.salesforce.com"
              },
              "salesforce_client_id" : {
                "title" : "Consumer Key",
                "description" : "The Salesforce application consumer key.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_client_secret" : {
                "title" : "Consumer Secret",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Consumer Secret",
                  "description" : "The Salesforce application consumer secret.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_client_secret",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "salesforce_user_name" : {
                "title" : "Username",
                "description" : "The Salesforce username.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The Salesforce user password.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    salesforce_streaming_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-salesforce:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-salesforce-streaming-source",
                  "prefix" : "salesforce"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive updates from Salesforce.",
          "icon_href" : "TODO",
          "id" : "salesforce_streaming_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Salesforce Streaming source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "salesforce_object_name", "salesforce_client_id", "salesforce_client_secret", "salesforce_user_name", "salesforce_password", "kafka_topic" ],
            "properties" : {
              "salesforce_object_name" : {
                "title" : "objectName",
                "description" : "The sObjectName",
                "type" : "string"
              },
              "salesforce_login_url" : {
                "title" : "Login URL",
                "description" : "The Salesforce instance login URL",
                "type" : "string",
                "default" : "https://login.salesforce.com"
              },
              "salesforce_client_id" : {
                "title" : "Consumer Key",
                "description" : "The Salesforce application consumer key",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_client_secret" : {
                "title" : "Consumer Secret",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Consumer Secret",
                  "description" : "The Salesforce application consumer secret",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_client_secret",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "salesforce_user_name" : {
                "title" : "Username",
                "description" : "The Salesforce username",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The Salesforce user password",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    salesforce_update_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-salesforce:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "salesforce-update-sink",
                  "prefix" : "salesforce"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Update an object in Salesforce.",
          "icon_href" : "TODO",
          "id" : "salesforce_update_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Salesforce Update sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "salesforce_s_object_name", "salesforce_s_object_id", "salesforce_client_id", "salesforce_client_secret", "salesforce_user_name", "salesforce_password", "kafka_topic" ],
            "properties" : {
              "salesforce_s_object_name" : {
                "title" : "Object Name",
                "description" : "The type of the Salesforce object. Required if using a key-value pair.",
                "type" : "string",
                "example" : "Contact"
              },
              "salesforce_s_object_id" : {
                "title" : "Object Id",
                "description" : "The ID of the Salesforce object. Required if using a key-value pair.",
                "type" : "string"
              },
              "salesforce_login_url" : {
                "title" : "Login URL",
                "description" : "The Salesforce instance login URL.",
                "type" : "string",
                "default" : "https://login.salesforce.com"
              },
              "salesforce_client_id" : {
                "title" : "Consumer Key",
                "description" : "The Salesforce application consumer key.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_client_secret" : {
                "title" : "Consumer Secret",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Consumer Secret",
                  "description" : "The Salesforce application consumer secret.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_client_secret",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "salesforce_user_name" : {
                "title" : "Username",
                "description" : "The Salesforce username.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "salesforce_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The Salesforce user password.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the salesforce_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-saas
-
  apiVersion: v1
  data:
    slack_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-slack:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "slack-sink",
                  "prefix" : "slack"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send messages to a Slack channel.",
          "icon_href" : "TODO",
          "id" : "slack_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Slack sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "slack_channel", "slack_webhook_url", "kafka_topic" ],
            "properties" : {
              "slack_channel" : {
                "title" : "Channel",
                "description" : "The Slack channel to send messages to.",
                "type" : "string",
                "example" : "#myroom"
              },
              "slack_webhook_url" : {
                "title" : "Webhook URL",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Webhook URL",
                  "description" : "The webhook URL used by the Slack channel to handle incoming messages.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the slack_webhook_url",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "slack_icon_emoji" : {
                "title" : "Icon Emoji",
                "description" : "Use a Slack emoji as an avatar.",
                "type" : "string"
              },
              "slack_icon_url" : {
                "title" : "Icon URL",
                "description" : "The avatar to use when sending a message to a channel or user.",
                "type" : "string"
              },
              "slack_username" : {
                "title" : "Username",
                "description" : "The username for the bot when it sends messages to a channel or user.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    slack_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-slack:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "slack-source",
                  "prefix" : "slack"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive messages from a Slack channel.",
          "icon_href" : "TODO",
          "id" : "slack_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Slack source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "slack_channel", "slack_token", "kafka_topic" ],
            "properties" : {
              "slack_channel" : {
                "title" : "Channel",
                "description" : "The Slack channel to receive messages from.",
                "type" : "string",
                "example" : "#myroom"
              },
              "slack_token" : {
                "title" : "Token",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Token",
                  "description" : "The Bot User OAuth Access Token to access Slack. A Slack app that has the following permissions is required: `channels:history`, `groups:history`, `im:history`, `mpim:history`, `channels:read`, `groups:read`, `im:read`, and `mpim:read`.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the slack_token",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "slack_delay" : {
                "title" : "Delay",
                "description" : "The delay between polls. If no unit provided, miliseconds is the default.",
                "type" : "string",
                "example" : "60s or 6000 or 1m"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    telegram_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-telegram:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "telegram-sink",
                  "prefix" : "telegram"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send a message to a Telegram chat using your Telegram bot as sender. To create a bot, use your Telegram app to contact the @botfather account.",
          "icon_href" : "TODO",
          "id" : "telegram_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Telegram sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "telegram_authorization_token", "kafka_topic" ],
            "properties" : {
              "telegram_authorization_token" : {
                "title" : "Token",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Token",
                  "description" : "The token to access your bot on Telegram. You you can obtain it from the Telegram @botfather.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the telegram_authorization_token",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "telegram_chat_id" : {
                "title" : "Chat ID",
                "description" : "The Chat ID to where you want to send messages by default.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    telegram_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-telegram:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "telegram-source",
                  "prefix" : "telegram"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Receive all messages that people send to your Telegram bot.",
          "icon_href" : "TODO",
          "id" : "telegram_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Telegram source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "telegram_authorization_token", "kafka_topic" ],
            "properties" : {
              "telegram_authorization_token" : {
                "title" : "Token",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Token",
                  "description" : "The token to access your bot on Telegram. You you can obtain it from the Telegram @botfather.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the telegram_authorization_token",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-social
-
  apiVersion: v1
  data:
    aws_redshift_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-redshift:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-redshift-sink",
                  "prefix" : "sql"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an Amazon Redshift Database.",
          "icon_href" : "TODO",
          "id" : "aws_redshift_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "Amazon Redshift sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "sql_server_name", "sql_username", "sql_password", "sql_query", "sql_database_name", "kafka_topic" ],
            "properties" : {
              "sql_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "sql_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the AWS RedShi data source.",
                "type" : "string",
                "default" : 5439
              },
              "sql_username" : {
                "title" : "Username",
                "description" : "The username to access a secured AWS Redshift Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "sql_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured AWS Redshift Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the sql_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "sql_query" : {
                "title" : "Query",
                "description" : "The query to execute against the AWS Redshift Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "sql_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the AWS RedShift Database.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    aws_redshift_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-aws-redshift:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "aws-redshift-source",
                  "prefix" : "sql"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Query data from an Amazon Redshift Database.",
          "icon_href" : "TODO",
          "id" : "aws_redshift_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "Amazon Redshift source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "sql_server_name", "sql_username", "sql_password", "sql_query", "sql_database_name", "kafka_topic" ],
            "properties" : {
              "sql_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "sql_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 5439
              },
              "sql_username" : {
                "title" : "Username",
                "description" : "The username to access a secured AWS RedShift Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "sql_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured AWS RedShift Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the sql_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "sql_query" : {
                "title" : "Query",
                "description" : "The query to execute against the AWS RedShift Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "sql_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the AWS RedShift Database.",
                "type" : "string"
              },
              "sql_consumed_query" : {
                "title" : "Consumed Query",
                "description" : "A query to run on a tuple consumed.",
                "type" : "string",
                "example" : "DELETE FROM accounts where user_id = :#user_id"
              },
              "sql_delay" : {
                "title" : "Delay",
                "description" : "The number of milliseconds before the next poll from the AWS RedShift database.",
                "type" : "integer",
                "default" : 500
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    mariadb_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-mariadb:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "mariadb-sink",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to a MariaDB Database.",
          "icon_href" : "TODO",
          "id" : "mariadb_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "MariaDB sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 3306
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured MariaDB Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured MariaDB Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the MariaDB Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the MariaDB Database.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    mariadb_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-mariadb:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "mariadb-source",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Query data from a MariaDB Database.",
          "icon_href" : "TODO",
          "id" : "mariadb_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "MariaDB source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 3306
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured MariaDB Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured MariaDB Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the MariaDB Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the MariaDB Database.",
                "type" : "string"
              },
              "db_consumed_query" : {
                "title" : "Consumed Query",
                "description" : "A query to run on a tuple consumed.",
                "type" : "string",
                "example" : "DELETE FROM accounts where user_id = :#user_id"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    mysql_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-mysql:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "mysql-sink",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to a MySQL Database.",
          "icon_href" : "TODO",
          "id" : "mysql_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "MySQL sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 3306
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured MySQL Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured MySQL Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the MySQL Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the MySQL Database.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    mysql_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-mysql:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "mysql-source",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Query data from a MySQL Database.",
          "icon_href" : "TODO",
          "id" : "mysql_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "MySQL source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 3306
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured MySQL Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured MySQL Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the MySQL Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the MySQL Database.",
                "type" : "string"
              },
              "db_consumed_query" : {
                "title" : "Consumed Query",
                "description" : "A query to run on a tuple consumed.",
                "type" : "string",
                "example" : "DELETE FROM accounts where user_id = :#user_id"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    postgresql_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-postgresql:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "postgresql-sink",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to a PostgreSQL Database.",
          "icon_href" : "TODO",
          "id" : "postgresql_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "PostgreSQL sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 5432
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured PostgreSQL Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured PostgreSQL Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the PostgreSQL Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the PostgreSQL Database.",
                "type" : "string"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    postgresql_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-postgresql:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "postgresql-source",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Query data from a PostgreSQL Database.",
          "icon_href" : "TODO",
          "id" : "postgresql_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "PostgreSQL source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 5432
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured PostgreSQL Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured PostgreSQL Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the PostgreSQL Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the PostgreSQL Database.",
                "type" : "string"
              },
              "db_consumed_query" : {
                "title" : "Consumed Query",
                "description" : "A query to run on a tuple consumed.",
                "type" : "string",
                "example" : "DELETE FROM accounts where user_id = :#user_id"
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    sqlserver_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-sqlserver:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-sqlserver-sink",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to a SQL Server Database.",
          "icon_href" : "TODO",
          "id" : "sqlserver_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "SQL Server sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 1433
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured SQL Server Database.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured SQL Server Database.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the SQL Server Database.",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the SQL Server Database.",
                "type" : "string"
              },
              "db_encrypt" : {
                "title" : "Encrypt Connection",
                "description" : "Encrypt the connection to SQL Server.",
                "type" : "boolean",
                "default" : false
              },
              "db_trust_server_certificate" : {
                "title" : "Trust Server Certificate",
                "description" : "Trust Server Ceritificate",
                "type" : "boolean",
                "default" : true
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    sqlserver_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-sqlserver:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/json",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "cos-sqlserver-source",
                  "prefix" : "db"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/json"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Query data from a SQL Server Database.",
          "icon_href" : "TODO",
          "id" : "sqlserver_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "SQL Server source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "db_server_name", "db_username", "db_password", "db_query", "db_database_name", "kafka_topic" ],
            "properties" : {
              "db_server_name" : {
                "title" : "Server Name",
                "description" : "The server name for the data source.",
                "type" : "string",
                "example" : "localhost"
              },
              "db_server_port" : {
                "title" : "Server Port",
                "description" : "The server port for the data source.",
                "type" : "string",
                "default" : 1433
              },
              "db_username" : {
                "title" : "Username",
                "description" : "The username to access a secured SQL Server Database",
                "type" : "string",
                "x-group" : "credentials"
              },
              "db_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access a secured SQL Server Database",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the db_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "db_query" : {
                "title" : "Query",
                "description" : "The query to execute against the SQL Server Database",
                "type" : "string",
                "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
              },
              "db_database_name" : {
                "title" : "Database Name",
                "description" : "The name of the Database.",
                "type" : "string"
              },
              "db_consumed_query" : {
                "title" : "Consumed Query",
                "description" : "A query to run on a tuple consumed",
                "type" : "string",
                "example" : "DELETE FROM accounts where user_id = :#user_id"
              },
              "db_encrypt" : {
                "title" : "Encrypt Connection",
                "description" : "Encrypt the connection to SQL Server.",
                "type" : "boolean",
                "default" : false
              },
              "db_trust_server_certificate" : {
                "title" : "Trust Server Certificate",
                "description" : "Trust Server Ceritificate",
                "type" : "boolean",
                "default" : true
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/json",
                      "enum" : [ "application/json" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-sql
-
  apiVersion: v1
  data:
    ftps_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-ftps:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "ftps-sink",
                  "prefix" : "ftps"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an FTPS Server.",
          "icon_href" : "TODO",
          "id" : "ftps_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "FTPS sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "ftps_connection_host", "ftps_connection_port", "ftps_username", "ftps_password", "ftps_directory_name", "kafka_topic" ],
            "properties" : {
              "ftps_connection_host" : {
                "title" : "Connection Host",
                "description" : "The hostname of the FTP server.",
                "type" : "string"
              },
              "ftps_connection_port" : {
                "title" : "Connection Port",
                "description" : "The port of the FTP server.",
                "type" : "string",
                "default" : 21
              },
              "ftps_username" : {
                "title" : "Username",
                "description" : "The username to access the FTP server.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "ftps_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access the FTP server.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the ftps_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "ftps_directory_name" : {
                "title" : "Directory Name",
                "description" : "The starting directory.",
                "type" : "string"
              },
              "ftps_passive_mode" : {
                "title" : "Passive Mode",
                "description" : "Set the passive mode connection.",
                "type" : "boolean",
                "default" : false
              },
              "ftps_file_exist" : {
                "title" : "File Existence",
                "description" : "Specifies how the Kamelet behaves if the file already exists. Possible values are Override, Append, Fail, or Ignore.",
                "type" : "string",
                "default" : "Override"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    ftps_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-ftps:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "ftps-source",
                  "prefix" : "ftps"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Retrieve data from an FTPS Server.",
          "icon_href" : "TODO",
          "id" : "ftps_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "FTPS source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "ftps_connection_host", "ftps_connection_port", "ftps_username", "ftps_password", "ftps_directory_name", "kafka_topic" ],
            "properties" : {
              "ftps_connection_host" : {
                "title" : "Connection Host",
                "description" : "The hostname of the FTPS server.",
                "type" : "string"
              },
              "ftps_connection_port" : {
                "title" : "Connection Port",
                "description" : "The port of the FTPS server.",
                "type" : "string",
                "default" : 21
              },
              "ftps_username" : {
                "title" : "Username",
                "description" : "The username to access the FTPS server.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "ftps_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access the FTPS server.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the ftps_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "ftps_directory_name" : {
                "title" : "Directory Name",
                "description" : "The starting directory.",
                "type" : "string"
              },
              "ftps_passive_mode" : {
                "title" : "Passive Mode",
                "description" : "Specifies to use passive mode connection.",
                "type" : "boolean",
                "default" : false
              },
              "ftps_recursive" : {
                "title" : "Recursive",
                "description" : "If a directory, look for files in all sub-directories as well.",
                "type" : "boolean",
                "default" : false
              },
              "ftps_idempotent" : {
                "title" : "Idempotency",
                "description" : "Skip already-processed files.",
                "type" : "boolean",
                "default" : true
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    minio_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-minio:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "minio-sink",
                  "prefix" : "minio"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to MinIO.",
          "icon_href" : "TODO",
          "id" : "minio_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "MinIO sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "minio_bucket_name", "minio_access_key", "minio_secret_key", "minio_endpoint", "kafka_topic" ],
            "properties" : {
              "minio_bucket_name" : {
                "title" : "Bucket Name",
                "description" : "The Minio Bucket name.",
                "type" : "string"
              },
              "minio_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from MinIO.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the minio_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "minio_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from MinIO.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the minio_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "minio_endpoint" : {
                "title" : "Endpoint",
                "description" : "The MinIO Endpoint. You can specify an URL, domain name, IPv4 address, or IPv6 address.",
                "type" : "string",
                "example" : "http://localhost:9000"
              },
              "minio_auto_create_bucket" : {
                "title" : "Autocreate Bucket",
                "description" : "Specify to automatically create the MinIO bucket.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    minio_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-minio:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "minio-source",
                  "prefix" : "minio"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Retrieve data from MinIO.",
          "icon_href" : "TODO",
          "id" : "minio_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "MinIO source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "minio_bucket_name", "minio_access_key", "minio_secret_key", "minio_endpoint", "kafka_topic" ],
            "properties" : {
              "minio_bucket_name" : {
                "title" : "Bucket Name",
                "description" : "The MinIO Bucket name.",
                "type" : "string"
              },
              "minio_delete_after_read" : {
                "title" : "Auto-delete Objects",
                "description" : "Delete objects after consuming them.",
                "type" : "boolean",
                "default" : true
              },
              "minio_access_key" : {
                "title" : "Access Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Access Key",
                  "description" : "The access key obtained from MinIO.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the minio_access_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "minio_secret_key" : {
                "title" : "Secret Key",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Secret Key",
                  "description" : "The secret key obtained from MinIO.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the minio_secret_key",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "minio_endpoint" : {
                "title" : "Endpoint",
                "description" : "The MinIO Endpoint. You can specify an URL, domain name, IPv4 address, or IPv6 address.",
                "type" : "string",
                "example" : "http://localhost:9000"
              },
              "minio_auto_create_bucket" : {
                "title" : "Autocreate Bucket",
                "description" : "Specifies to automatically create the MinIO bucket.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    sftp_sink_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-sftp:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "sink",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "sftp-sink",
                  "prefix" : "sftp"
                },
                "kafka" : {
                  "name" : "cos-kafka-source",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Send data to an SFTP Server.",
          "icon_href" : "TODO",
          "id" : "sftp_sink_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "sink" ],
          "name" : "SFTP sink",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "sftp_connection_host", "sftp_connection_port", "sftp_username", "sftp_password", "sftp_directory_name", "kafka_topic" ],
            "properties" : {
              "sftp_connection_host" : {
                "title" : "Connection Host",
                "description" : "The hostname of the FTP server",
                "type" : "string"
              },
              "sftp_connection_port" : {
                "title" : "Connection Port",
                "description" : "The port of the FTP server",
                "type" : "string",
                "default" : 22
              },
              "sftp_username" : {
                "title" : "Username",
                "description" : "The username to access the FTP server.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "sftp_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access the FTP server.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the sftp_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "sftp_directory_name" : {
                "title" : "Directory Name",
                "description" : "The starting directory.",
                "type" : "string"
              },
              "sftp_passive_mode" : {
                "title" : "Passive Mode",
                "description" : "Specifies to use passive mode connection.",
                "type" : "boolean",
                "default" : false
              },
              "sftp_file_exist" : {
                "title" : "File Existence",
                "description" : "How to behave in case of file already existent. There are 4 enums. Possible values are Override, Append, Fail, or Ignore.",
                "type" : "string",
                "default" : "Override"
              },
              "kafka_topic" : {
                "title" : "Topic Names",
                "description" : "A comma-separated list of Kafka topic names.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "consumes" : {
                    "$ref" : "#/$defs/data_shape/consumes"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "consumes" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that Kafka sends to the sink connector.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
    sftp_source_0.1.json: |-
      {
        "channels" : {
          "stable" : {
            "shard_metadata" : {
              "annotations" : {
                "trait.camel.apache.org/container.request-cpu" : "0.20",
                "trait.camel.apache.org/container.request-memory" : "128M",
                "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
              },
              "connector_image" : "quay.io/rhoas/cos-connector-sftp:main-522b5980f26dc7a36693e694567bd570ff807a1a",
              "connector_revision" : 71,
              "connector_type" : "source",
              "consumes" : "application/octet-stream",
              "error_handler_strategy" : "stop",
              "kamelets" : {
                "adapter" : {
                  "name" : "sftp-source",
                  "prefix" : "sftp"
                },
                "kafka" : {
                  "name" : "cos-kafka-sink",
                  "prefix" : "kafka"
                }
              },
              "operators" : [ {
                "type" : "camel-connector-operator",
                "version" : "[1.0.0,2.0.0)"
              } ],
              "produces" : "application/octet-stream"
            }
          }
        },
        "connector_type" : {
          "capabilities" : [ "data_shape", "error_handler", "processors" ],
          "channels" : [ "stable" ],
          "description" : "Retrieve data from an SFTP Server.",
          "icon_href" : "TODO",
          "id" : "sftp_source_0.1",
          "kind" : "ConnectorType",
          "labels" : [ "source" ],
          "name" : "SFTP source",
          "schema" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "sftp_connection_host", "sftp_connection_port", "sftp_username", "sftp_password", "sftp_directory_name", "kafka_topic" ],
            "properties" : {
              "sftp_connection_host" : {
                "title" : "Connection Host",
                "description" : "The hostname of the SFTP server.",
                "type" : "string"
              },
              "sftp_connection_port" : {
                "title" : "Connection Port",
                "description" : "The port of the FTP server.",
                "type" : "string",
                "default" : 22
              },
              "sftp_username" : {
                "title" : "Username",
                "description" : "The username to access the SFTP server.",
                "type" : "string",
                "x-group" : "credentials"
              },
              "sftp_password" : {
                "title" : "Password",
                "x-group" : "credentials",
                "oneOf" : [ {
                  "title" : "Password",
                  "description" : "The password to access the SFTP server.",
                  "type" : "string",
                  "format" : "password"
                }, {
                  "description" : "An opaque reference to the sftp_password",
                  "type" : "object",
                  "properties" : { }
                } ]
              },
              "sftp_directory_name" : {
                "title" : "Directory Name",
                "description" : "The starting directory.",
                "type" : "string"
              },
              "sftp_passive_mode" : {
                "title" : "Passive Mode",
                "description" : "Sets the passive mode connection.",
                "type" : "boolean",
                "default" : false
              },
              "sftp_recursive" : {
                "title" : "Recursive",
                "description" : "If a directory, look for files in all sub-directories as well.",
                "type" : "boolean",
                "default" : false
              },
              "sftp_idempotent" : {
                "title" : "Idempotency",
                "description" : "Skip already-processed files.",
                "type" : "boolean",
                "default" : true
              },
              "sftp_ignore_file_not_found_or_permission_error" : {
                "title" : "Ignore File Not Found Or Permission Error",
                "description" : "Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error. By default when a directory or file does not exists or insufficient permission, then an exception is thrown. Setting this option to true allows to ignore that instead.",
                "type" : "boolean",
                "default" : false
              },
              "kafka_topic" : {
                "title" : "Topic Name",
                "description" : "The name of the Kafka Topic to use.",
                "type" : "string"
              },
              "data_shape" : {
                "type" : "object",
                "additionalProperties" : false,
                "properties" : {
                  "produces" : {
                    "$ref" : "#/$defs/data_shape/produces"
                  }
                }
              },
              "error_handler" : {
                "type" : "object",
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/error_handler/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "stop" ],
                  "properties" : {
                    "stop" : {
                      "$ref" : "#/$defs/error_handler/stop"
                    }
                  }
                }, {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "dead_letter_queue" ],
                  "properties" : {
                    "dead_letter_queue" : {
                      "$ref" : "#/$defs/error_handler/dead_letter_queue"
                    }
                  }
                } ],
                "default" : {
                  "stop" : { }
                }
              },
              "processors" : { }
            },
            "$defs" : {
              "data_shape" : {
                "produces" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "format" ],
                  "properties" : {
                    "format" : {
                      "type" : "string",
                      "description" : "The format of the data that the source connector sends to Kafka.",
                      "default" : "application/octet-stream",
                      "enum" : [ "application/octet-stream" ]
                    }
                  }
                }
              },
              "error_handler" : {
                "log" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "stop" : {
                  "type" : "object",
                  "additionalProperties" : false
                },
                "dead_letter_queue" : {
                  "type" : "object",
                  "additionalProperties" : false,
                  "required" : [ "topic" ],
                  "properties" : {
                    "topic" : {
                      "type" : "string",
                      "title" : "Dead Letter Topic Name",
                      "description" : "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error."
                    }
                  }
                }
              }
            }
          },
          "version" : "0.1"
        }
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: connector-catalog-camel-storage
